name: Deploy (WIPE DB)

on:
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: deploy-wipe-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: [self-hosted]

    env:
      COMPOSE_PROJECT_NAME: tanknu
      DB_VOLUME_NAME: tanknu_dbdata

    steps:
      - name: Pre-clean workspace
        shell: bash
        run: |
          set -e
          shopt -s dotglob nullglob
          if [ -d "$GITHUB_WORKSPACE" ]; then
            rm -rf "$GITHUB_WORKSPACE"/* || true
          fi

      - name: Checkout fresh
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          clean: true

      - name: Detect docker compose
        id: dccmd
        shell: bash
        run: |
          if docker compose version >/dev/null 2>&1; then
            echo "cmd=docker compose" >> "$GITHUB_OUTPUT"
          elif docker-compose version >/dev/null 2>&1; then
            echo "cmd=docker-compose" >> "$GITHUB_OUTPUT"
          else
            echo "Geen docker compose gevonden" >&2
            exit 1
          fi

      - name: Validate compose
        shell: bash
        run: |
          DC="${{ steps.dccmd.outputs.cmd }}"
          $DC config >/dev/null

      - name: Tear down stack (DB volume WORDT verwijderd)
        shell: bash
        run: |
          set -e
          DC="${{ steps.dccmd.outputs.cmd }}"

          echo ">>> Compose down (inclusief images/networks). Nog geen volumes."
          $DC down --remove-orphans --rmi all || true

          echo ">>> Stop & rm alles dat eventueel nog draait (failsafe)"
          if [ -n "$(docker ps -q)" ]; then
            docker stop $(docker ps -q) || true
          fi
          if [ -n "$(docker ps -aq)" ]; then
            docker rm -f $(docker ps -aq) || true
          fi

          echo ">>> Verwijder ALLE docker volumes (inclusief de DB volume!)"
          ALL_VOLS=$(docker volume ls -q)
          for V in $ALL_VOLS; do
            echo "Deleting volume: $V"
            docker volume rm "$V" || true
          done

          echo ">>> Prune dangling networks/images/build cache"
          docker network prune -f || true
          docker image prune -f || true
          docker builder prune -f || true

      - name: Build fresh & up
        shell: bash
        run: |
          set -e
          DC="${{ steps.dccmd.outputs.cmd }}"

          echo ">>> Build images with --no-cache and pull latest bases"
          $DC build --pull --no-cache

          echo ">>> Bring stack up from absolute clean state"
          $DC up -d --remove-orphans --renew-anon-volumes

      - name: Status
        shell: bash
        run: |
          DC="${{ steps.dccmd.outputs.cmd }}"
          echo "== Compose ps =="
          $DC ps || true

          echo "== docker ps =="
          docker ps || true

          echo "== Volumes on host (DB volume is nu ook weg) =="
          docker volume ls
